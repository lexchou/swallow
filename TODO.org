#+TITLE: Swallow compiler TODO list
#+AUTHOR: Lex Chou


* Control Flow
** Conditional statements
*** If
*** Switch
*** No Implicit Fallthrough
*** Range matching
*** Tuple
*** Value binding
*** Where
** Control Transfer
*** Continue
*** Break in a loop statement
*** Break in a switch statement
*** Fallthrough
*** Labeled statements



* Test case complements

** Codes that can crash swallow:[0/1]
- [ ] Following codes run one by one in REPL would crash the swallow
#+BEGIN_SRC
func test(a : Int) -> String { return ""; }
func test(a : String) -> Bool { return true; }
let a = (test(56), test(""))
#+END_SRC

** Codes that doesn't work as expected: [0/2]

- [ ] Class declaration 
#+BEGIN_SRC
class cobject { var fd = -1 }
let b = cobject()
#+END_SRC
  
- [ ] Type declared within a tuple doesn't work for swallow
#+BEGIN_SRC
let (c, d : Double) = (1, 2)
#+END_SRC
  

